// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TaskStatus {
  TODO // Task is yet to be started
  IN_PROGRESS // Task is currently being worked on
  DONE // Task is completed
  BLOCKED // Task is blocked or awaiting action
  REVIEW // Task is completed and under review
  ON_HOLD // Task is temporarily paused
  CANCELLED // Task has been cancelled
}

model task {
  id        String     @id @default(uuid())
  title     String
  body      String?
  status    TaskStatus @default(TODO)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model user {
  id       String   @id @unique @default(cuid())
  name     String
  email    String   @unique
  password String
  username String   @unique
  profile  profile?
  token    token?
}

model token {
  id           String   @id @unique @default(cuid())
  user         user     @relation(fields: [userId], references: [id])
  userId       String   @unique
  refreshToken String
  lastUpdated  DateTime @updatedAt
}

model profile {
  id     String @id @unique @default(cuid())
  user   user   @relation(fields: [userId], references: [id])
  userId String @unique
}



model dashx_email{
  id String @id @default(cuid())
  email String @unique 
  createdAt DateTime @default(now())
}